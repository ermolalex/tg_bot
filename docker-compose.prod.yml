version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    # command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; gunicorn --bind 0.0.0.0:8000 config.wsgi'
    expose:
      - 8000
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://ermolalex:Lapra+78952-@db:5432/tgbot
      - DJANGO_ALLOWED_HOSTS=zulip.voblake.shop
    depends_on:
      #- db
      db:
        condition: service_healthy

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`zulip.voblake.shop`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=ermolalex
      - POSTGRES_PASSWORD=Lapra+78952-
      - POSTGRES_DB=tgbot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --dbname=tgbot --username=ermolalex" ]   #  -U ermolalex
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
#      #- "traefik.http.routers.dashboard.rule=Host(`traefik.kik-soft.ru`)"
#      - "traefik.http.routers.dashboard.tls=true"
#      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
#      - "traefik.http.routers.dashboard.service=api@internal"
#      - "traefik.http.routers.dashboard.middlewares=auth"
#      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"

volumes:
  postgres_data_prod:
  traefik-public-certificates:
